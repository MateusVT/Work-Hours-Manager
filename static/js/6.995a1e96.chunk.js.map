{"version":3,"sources":["../node_modules/jspdf/dist sync","utils/Moment.ts","utils/Clock.tsx","utils/Image.tsx","utils/WorkRecordsProvider.tsx","utils/TableIcons.tsx","shared/CustomTable.tsx","main/home/ActivityTable.tsx","main/home/Chart.tsx","main/home/Home.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","loadAbsoluteMoment","moment","format","momentjs","loadMoment","local","nowLocale","React","memo","currentDate","useMemo","dayOfYear","useState","date","setDate","time","setTime","useEffect","useInterval","Typography","style","letterSpacing","variant","fontFamily","props","actualProps","src","width","height","WorkRecordsContext","createContext","WorkRecordsProvider","children","workRecords","setWorkRecords","todayWorkRecords","setTodayWorkRecords","lastWorkRecord","setLastWorkRecord","todayWorkReport","setTodayWorkReport","weeklyWorkReport","setWeeklyWorkReport","user","useContext","ComponentContext","enqueueSnackbar","useSnackbar","loadWorkRecords","a","Http","get","path","onError","error","console","log","onSuccess","activities","last","weeklyReports","slice","dailyReport","loadTodayReport","loadLastWeekReport","addWorkRecord","useCallback","activityType","post","body","response","loadWorkRecordsByDate","value","Provider","useWorkRecords","context","tableIcons","Add","forwardRef","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","ViewColumn","CustomTable","title","pageSize","Date","handleDateChange","dateChanged","TableDatePicker","position","top","display","justifyContent","Button","border","zIndex","onClick","getTime","subtract","valueOf","ArrowBack","utils","DateFnsUtils","DatePicker","maxDate","margin","marginTop","color","onChange","disabled","getDate","add","ArrowForward","options","components","Toolbar","flexDirection","minHeight","columns","data","items","icons","ActivityTable","headerStyle","fontWeight","borderBottom","cellStyle","render","record","ArrowUpward","LocalCafe","handleRecordIcon","field","chartOptionsFor","legendPosition","type","min","max","onItemSelection","responsive","maintainAspectRatio","onResize","aspectRatio","layout","padding","scales","yAxes","ticks","legend","labels","fontSize","_","item","index","onHover","event","target","cursor","chartElements","length","_index","text","tooltips","bodyFontSize","Chart","fetchColor","fetchLegend","fetchValue","showZeros","pairs","map","key","filter","pair","colors","chartProps","datasets","backgroundColor","sort","b","orderBy","createElement","Bar","HorizontalBar","Doughnut","Pie","Line","UserInfo","Box","overflow","p","flex","marginLeft","Grid","container","alignItems","xs","name","fontStyle","occupation","UserHoursReport","lg","Work","marginRight","QueryBuilder","totalHoursWorked","Actions","updateState","forceUpdate","endIcon","AlarmOn","HomeToolbar","IconButton","edge","aria-label","Menu","component","logout","ExitToApp","ChartWeeklyInvoke","indexOf","hours","minutes","Home","bgcolor","AppBar","md","Paper","textAlign"],"mappings":"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","file":"static/js/6.995a1e96.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 440;","import * as momentjs from \"moment\"\r\n\r\nfunction loadAbsoluteMoment(moment: string | number | Date, format?: momentjs.MomentFormatSpecification) {\r\n\treturn momentjs.utc(moment, format)\r\n}\r\n\r\nfunction loadDuration(moment: string | number) {\r\n\treturn momentjs.duration(moment)\r\n}\r\n\r\nfunction loadMoment(moment: string | number | Date, format?: momentjs.MomentFormatSpecification) {\r\n\treturn momentjs.utc(moment, format).local()\r\n}\r\n\r\nfunction now() {\r\n\treturn momentjs.utc(momentjs.now())\r\n}\r\n\r\nfunction nowLocale() {\r\n\treturn momentjs.utc(momentjs.now()).local()\r\n}\r\n\r\nexport type Moment = momentjs.Moment\r\n\r\nexport { loadAbsoluteMoment, loadDuration, loadMoment, now, nowLocale }\r\n\r\n","import { Typography } from \"@material-ui/core\"\r\nimport React, { useEffect, useMemo, useState } from \"react\"\r\nimport { useInterval } from \"react-use\"\r\nimport { now } from \"../utils/Moment\"\r\n\r\nfunction Clock() {\r\n    const moment = () => now().local()\r\n    const currentDate = useMemo(() => moment().format('dddd, MMMM Do YYYY'), [moment().dayOfYear()])\r\n    const [date, setDate] = useState(currentDate)\r\n    const [time, setTime] = useState(moment().format(\"HH:mm:ss\"))\r\n\r\n    useEffect(() => setDate(currentDate), [currentDate])\r\n    useInterval(() => setTime(moment().format(\"HH:mm:ss\")), 1000)\r\n\r\n    return (\r\n        <>\r\n            <Typography style={{ letterSpacing: \"0.25rem\" }} variant=\"h3\">\r\n                {time}\r\n            </Typography>\r\n            <Typography style={{ fontFamily: 'Playfair Display, sans-serif' }} variant=\"subtitle1\">\r\n                {date}\r\n            </Typography>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Clock)","\r\nimport * as React from \"react\"\r\n\r\nexport type ImageProps = React.HTMLAttributes<HTMLElement> & {\r\n    width: string\r\n    height: string\r\n    src: string\r\n}\r\n\r\nfunction Image(props: ImageProps) {\r\n    const actualProps: JSX.IntrinsicElements[\"img\"] = {\r\n        ...props,\r\n        src: props.src,\r\n        style: {\r\n            ...props.style,\r\n            width: props.width,\r\n            height: props.height,\r\n        }\r\n    }\r\n\r\n    return <img {...actualProps} />\r\n}\r\n\r\nexport default React.memo(Image)","import last from \"array-last\";\r\nimport { useSnackbar } from 'notistack';\r\nimport React, {\r\n  createContext,\r\n\r\n  useCallback,\r\n  useContext,\r\n  useEffect, useState\r\n} from 'react';\r\nimport { ComponentContext } from '../shared/ComponentContext';\r\nimport { ActivityRecord, ActivityTypes, DayWorkReport } from '../types/Types';\r\nimport Http from './Http';\r\nimport { Moment, nowLocale } from './Moment';\r\n\r\ninterface WorkRecordsContext {\r\n  workRecords: ActivityRecord[];\r\n  todayWorkReport?: DayWorkReport;\r\n  weeklyWorkReport?: DayWorkReport[];\r\n  todayWorkRecords: ActivityRecord[];\r\n  lastWorkRecord?: ActivityRecord;\r\n  addWorkRecord(activityType: ActivityTypes): void;\r\n  loadWorkRecordsByDate(date: Moment): void;\r\n}\r\n\r\nconst WorkRecordsContext = createContext<WorkRecordsContext | null>(null);\r\n\r\nconst WorkRecordsProvider: React.FC = ({ children }) => {\r\n  const [workRecords, setWorkRecords] = useState<ActivityRecord[]>([]);\r\n  const [todayWorkRecords, setTodayWorkRecords] = useState<ActivityRecord[]>([]);\r\n  const [lastWorkRecord, setLastWorkRecord] = useState<ActivityRecord>();\r\n  const [todayWorkReport, setTodayWorkReport] = useState<DayWorkReport>();\r\n  const [weeklyWorkReport, setWeeklyWorkReport] = useState<DayWorkReport[]>([]);\r\n  const context = useContext(ComponentContext)\r\n  const { user } = context\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  async function loadWorkRecords(date?: Moment): Promise<void> {\r\n    if (!user) return\r\n    Http.get({\r\n      path: `/work-records?userId=${user.id}&date=${date ? date.format(\"YYYY/MM/DD\") : nowLocale().format(\"YYYY/MM/DD\")}`,\r\n      onError: (error: string) => {\r\n        console.log(\"error\", error)\r\n        enqueueSnackbar('Request Error', { variant: 'error' })\r\n      },\r\n      onSuccess: (activities: ActivityRecord[]) => {\r\n        setWorkRecords(activities)\r\n        !date && setLastWorkRecord(last(activities))\r\n        !date && setTodayWorkRecords(activities)\r\n      }\r\n    })\r\n  }\r\n\r\n  async function loadLastWeekReport(): Promise<void> {\r\n    if (!user) return\r\n    Http.get({\r\n      path: `/daily-work-report?userId=${user.id}`,\r\n      onError: (error: string) => {\r\n        console.log(\"error\", error)\r\n        enqueueSnackbar('Request Error', { variant: 'error' })\r\n      },\r\n      onSuccess: (weeklyReports: DayWorkReport[]) => {\r\n        setWeeklyWorkReport(weeklyReports.slice(0, 7))\r\n      }\r\n    })\r\n  }\r\n\r\n  async function loadTodayReport(): Promise<void> {\r\n    if (!user) return\r\n    Http.get({\r\n      path: `/daily-work-report?userId=${user.id}&date=${nowLocale().format(\"YYYY/MM/DD\")}`,\r\n      onError: (error: string) => {\r\n        console.log(\"error\", error)\r\n        enqueueSnackbar('Request Error', { variant: 'error' })\r\n      },\r\n      onSuccess: (dailyReport: DayWorkReport[]) => {\r\n        setTodayWorkReport(dailyReport[0])\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadWorkRecords()\r\n    loadTodayReport()\r\n    loadLastWeekReport()\r\n  }, []);\r\n\r\n  const addWorkRecord = useCallback(async (activityType: ActivityTypes) => {\r\n    if (!user) return\r\n    Http.post({\r\n      path: `/work-records`,\r\n      body: {\r\n        \"userId\": user.id,\r\n        \"date\": nowLocale().format(\"YYYY/MM/DD\"),\r\n        \"time\": nowLocale().format(\"HH:mm\"),\r\n        \"activityType\": activityType\r\n      },\r\n      onError: (error: string) => {\r\n        console.log(\"error\", error)\r\n      },\r\n      onSuccess: (response: any) => {\r\n        loadWorkRecords();\r\n        enqueueSnackbar(activityType + ' Registered!', { variant: 'success' })\r\n      }\r\n    })\r\n\r\n  }, []);\r\n\r\n  const loadWorkRecordsByDate = useCallback(async (date: Moment) => {\r\n    loadWorkRecords(date);\r\n  }, []);\r\n\r\n\r\n  const value = React.useMemo(\r\n    () => ({ addWorkRecord, workRecords, loadWorkRecordsByDate, lastWorkRecord, todayWorkRecords, todayWorkReport, weeklyWorkReport }),\r\n    [workRecords, addWorkRecord, loadWorkRecordsByDate, lastWorkRecord, todayWorkRecords, todayWorkReport, weeklyWorkReport],\r\n  );\r\n\r\n  return <WorkRecordsContext.Provider value={value}>{children}</WorkRecordsContext.Provider>;\r\n};\r\n\r\nfunction useWorkRecords(): WorkRecordsContext {\r\n  const context = useContext(WorkRecordsContext);\r\n\r\n  if (!context) {\r\n    throw new Error(`useWorkRecords() must be used within a WorkRecordsProvider`);\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport { WorkRecordsProvider, useWorkRecords };\r\n","import { AddBox, ArrowDownward, Clear, DeleteOutline, Edit, ViewColumn } from \"@material-ui/icons\"\r\nimport Check from \"@material-ui/icons/Check\"\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\"\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\"\r\nimport FilterList from \"@material-ui/icons/FilterList\"\r\nimport FirstPage from \"@material-ui/icons/FirstPage\"\r\nimport LastPage from \"@material-ui/icons/LastPage\"\r\nimport Remove from \"@material-ui/icons/Remove\"\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\"\r\nimport Search from \"@material-ui/icons/Search\"\r\nimport React from \"react\"\r\n\r\nconst tableIcons = {\r\n    Add: React.forwardRef((props, ref) => <AddBox {...props} ref={ref as any} />),\r\n    Check: React.forwardRef((props, ref) => <Check {...props} ref={ref as any} />),\r\n    Clear: React.forwardRef((props, ref) => <Clear {...props} ref={ref as any} />),\r\n    Delete: React.forwardRef((props, ref) => <DeleteOutline {...props} ref={ref as any} />),\r\n    DetailPanel: React.forwardRef((props, ref) => <ChevronRight {...props} ref={ref as any} />),\r\n    Edit: React.forwardRef((props, ref) => <Edit {...props} ref={ref as any} />),\r\n    Export: React.forwardRef((props, ref) => <SaveAlt {...props} ref={ref as any} />),\r\n    Filter: React.forwardRef((props, ref) => <FilterList {...props} ref={ref as any} />),\r\n    FirstPage: React.forwardRef((props, ref) => <FirstPage {...props} ref={ref as any} />),\r\n    LastPage: React.forwardRef((props, ref) => <LastPage {...props} ref={ref as any} />),\r\n    NextPage: React.forwardRef((props, ref) => <ChevronRight {...props} ref={ref as any} />),\r\n    PreviousPage: React.forwardRef((props, ref) => <ChevronLeft {...props} ref={ref as any} />),\r\n    ResetSearch: React.forwardRef((props, ref) => <Clear {...props} ref={ref as any} />),\r\n    Search: React.forwardRef((props, ref) => <Search {...props} ref={ref as any} />),\r\n    SortArrow: React.forwardRef((props, ref) => <ArrowDownward {...props} ref={ref as any} />),\r\n    ThirdStateCheck: React.forwardRef((props, ref) => <Remove {...props} ref={ref as any} />),\r\n    ViewColumn: React.forwardRef((props, ref) => <ViewColumn {...props} ref={ref as any} />)\r\n}\r\n\r\nexport default tableIcons","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Button } from '@material-ui/core';\r\nimport { ArrowBack, ArrowForward } from '@material-ui/icons';\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport MaterialTable, { Column, MTableToolbar } from 'material-table';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { loadAbsoluteMoment, loadMoment, nowLocale } from '../utils/Moment';\r\nimport tableIcons from '../utils/TableIcons';\r\nimport { useWorkRecords } from '../utils/WorkRecordsProvider';\r\n\r\ntype TableProps = {\r\n    items: any[]\r\n    columns: Array<Column<any>>\r\n    pageSize: number\r\n    title: string\r\n}\r\n\r\nexport default function CustomTable(props: TableProps) {\r\n    const { title, pageSize } = props\r\n    const [date, setDate] = useState<Date>(new Date());\r\n    const { loadWorkRecordsByDate } = useWorkRecords()\r\n\r\n\r\n    useEffect(() => {\r\n        loadWorkRecordsByDate(loadMoment(date.getTime()))\r\n    }, [date])\r\n\r\n    function handleDateChange(dateChanged: Date | null, value?: string | null | undefined) {\r\n        if (dateChanged) {\r\n            setDate(dateChanged)\r\n        }\r\n    }\r\n\r\n    function TableDatePicker() {\r\n        return <div\r\n            style={{\r\n                position: \"absolute\",\r\n                top: \"0\",\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n                justifyContent: \"center\"\r\n            }}\r\n        >\r\n            <Button\r\n                variant=\"outlined\"\r\n                style={{ border: \"none\", zIndex: 100 }}\r\n                onClick={() => {\r\n                    setDate(new Date(\r\n                        loadAbsoluteMoment(date.getTime())\r\n                            .subtract(1, \"day\")\r\n                            .valueOf()\r\n                    ))\r\n                }}\r\n            >\r\n                <ArrowBack />\r\n            </Button>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <DatePicker\r\n                    maxDate={loadMoment(nowLocale().valueOf())}\r\n                    format=\"yyyy/MM/dd\"\r\n                    margin=\"normal\"\r\n                    style={{\r\n                        marginTop: \"8px\",\r\n                        color: \"black\",\r\n                        width: \"90px\",\r\n                        position: \"relative\",\r\n                        zIndex: 100\r\n                    }}\r\n                    id=\"date-picker-inline\"\r\n                    value={date}\r\n                    onChange={handleDateChange}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <Button\r\n                variant=\"outlined\"\r\n                disabled={date.getDate() == nowLocale().date()}\r\n                style={{ border: \"none\", zIndex: 100 }}\r\n                onClick={() => {\r\n                    setDate(new Date(\r\n                        loadAbsoluteMoment(date.getTime())\r\n                            .add(1, \"day\")\r\n                            .valueOf()\r\n                    ))\r\n\r\n                }}\r\n            >\r\n                <ArrowForward />\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <MaterialTable\r\n\r\n            options={{ pageSize: pageSize }}\r\n            components={{\r\n                Toolbar: props => (\r\n                    <div\r\n                        style={{\r\n                            display: \"block\",\r\n                            flexDirection: \"row-reverse\",\r\n                            justifyContent: \"flex-end !important\"\r\n                        }}\r\n                    >\r\n                        <TableDatePicker />\r\n                        <MTableToolbar {...props} />\r\n                    </div>)\r\n            }}\r\n            style={{\r\n                width: \"100%\", minHeight: \"100%\"\r\n            }}\r\n            title={title}\r\n            columns={props.columns}\r\n            data={props.items}\r\n            icons={tableIcons as any}\r\n\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport { ArrowDownward, ArrowUpward, LocalCafe } from \"@material-ui/icons\"\r\nimport CustomTable from '../../shared/CustomTable';\r\nimport { useWorkRecords } from '../../utils/WorkRecordsProvider';\r\nimport { ActivityTypes, ActivityRecord } from '../../types/Types';\r\n\r\nexport default function ActivityTable() {\r\n    const { workRecords } = useWorkRecords()\r\n    const headerStyle: any = {\r\n        fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\r\n        fontWeight: \"bold\",\r\n        borderBottom: \"1px solid rgba(224, 224, 224, 0.4)\"\r\n    }\r\n    function handleRecordIcon(record: ActivityTypes) {\r\n        switch (record) {\r\n            case \"Arriving\":\r\n                return <ArrowDownward style={{ color: \"#00802b\" }} />\r\n            case \"Exiting\":\r\n                return <ArrowUpward style={{ color: \"#fb0e0e\" }} />\r\n            case \"Lunch Started\":\r\n                return <LocalCafe style={{ color: \"#00802b\" }} />\r\n            case \"Finished Lunch\":\r\n                return <LocalCafe style={{ color: \"#fb0e0e\" }} />\r\n            default:\r\n                return <></>\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '', cellStyle: { width: \"10%\" }, render: (data: ActivityRecord) => (\r\n                handleRecordIcon(data.activityType)\r\n            )\r\n        },\r\n        { title: 'Activity', headerStyle: headerStyle, field: 'activityType' },\r\n        { title: 'Date', headerStyle: headerStyle, field: 'date' },\r\n        { title: 'Time', headerStyle: headerStyle, field: 'time' }\r\n    ]\r\n\r\n    return <CustomTable title={\"Today's Records\"} pageSize={8} columns={columns} items={workRecords} />\r\n}\r\n\r\n","import { ChartColor, ChartOptions } from \"chart.js\"\r\nimport React, { useMemo } from \"react\"\r\nimport { Bar, ChartComponentProps, Doughnut, HorizontalBar, Line, Pie } from \"react-chartjs-2\"\r\n\r\ntype Pair<E> = {\r\n\tkey: E\r\n\tvalue: number\r\n}\r\n\r\ntype ChartProps<E> = {\r\n\torderBy?: string\r\n\tmin: number,\r\n\tmax: number,\r\n\tfetchColor: (item: E, index: number) => ChartColor\r\n\tfetchLegend: (item: E, index: number) => string\r\n\tfetchValue: (item: E, index: number) => number\r\n\titems: E[]\r\n\tonItemSelection?: (item: E) => void\r\n\tshowZeros?: boolean\r\n\tlegendPosition?: string\r\n\ttitle: string\r\n\ttype: \"verticalBar\" | \"doughnut\" | \"horizontalBar\" | \"pizza\" | \"line\"\r\n}\r\n\r\nfunction Chart<E>(props: ChartProps<E>) {\r\n\tconst {\r\n\t\tfetchColor,\r\n\t\tfetchLegend,\r\n\t\tfetchValue,\r\n\t\titems,\r\n\t\tmin,\r\n\t\tmax,\r\n\t\tonItemSelection,\r\n\t\tshowZeros,\r\n\t\ttitle,\r\n\t\tlegendPosition,\r\n\t\ttype\r\n\t} = props\r\n\tconst pairs = useMemo<Pair<E>[]>(\r\n\t\t() =>\r\n\t\t\titems\r\n\t\t\t\t.map((item, index) => ({ key: item, value: fetchValue(item, index) }))\r\n\t\t\t\t.filter(pair => showZeros || pair.value > 0),\r\n\t\t[fetchValue, items, showZeros]\r\n\t)\r\n\tconst colors = useMemo(() => pairs.map((pair, index) => fetchColor(pair.key, index)), [fetchColor, pairs])\r\n\tconst keys = useMemo(() => pairs.map((pair, index) => fetchLegend(pair.key, index)), [fetchLegend, pairs])\r\n\r\n\tconst values = useMemo(\r\n\t\t() =>\r\n\t\t\tpairs\r\n\t\t\t\t.map(pair => pair.value)\r\n\t\t\t\t.sort((a, b) => {\r\n\t\t\t\t\tif (props.orderBy) {\r\n\t\t\t\t\t\tswitch (props.orderBy) {\r\n\t\t\t\t\t\t\tcase \"desc\":\r\n\t\t\t\t\t\t\t\tif (a < b) {\r\n\t\t\t\t\t\t\t\t\treturn 1\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (a > b) {\r\n\t\t\t\t\t\t\t\t\treturn -1\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn 0\r\n\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\tcase \"asc\":\r\n\t\t\t\t\t\t\t\tif (a < b) {\r\n\t\t\t\t\t\t\t\t\treturn -1\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (a > b) {\r\n\t\t\t\t\t\t\t\t\treturn 1\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn 0\r\n\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn 0\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t[pairs, props.orderBy]\r\n\t)\r\n\tconst chartProps: ChartComponentProps = {\r\n\t\tdata: {\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tbackgroundColor: colors,\r\n\t\t\t\t\tdata: values\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlabels: keys\r\n\t\t},\r\n\r\n\t\toptions: chartOptionsFor(\r\n\t\t\ttitle,\r\n\t\t\tlegendPosition || \"bottom\",\r\n\t\t\ttype,\r\n\t\t\tmin,\r\n\t\t\tmax,\r\n\t\t\tonItemSelection && (index => onItemSelection(pairs[index].key))\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{type == \"verticalBar\" && React.createElement(Bar, chartProps)}\r\n\t\t\t{type == \"horizontalBar\" && React.createElement(HorizontalBar, chartProps)}\r\n\t\t\t{type == \"doughnut\" && React.createElement(Doughnut, chartProps)}\r\n\t\t\t{type == \"pizza\" && React.createElement(Pie, chartProps)}\r\n\t\t\t{type == \"line\" && React.createElement(Line, chartProps)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nfunction chartOptionsFor(\r\n\ttitle: string,\r\n\tlegendPosition: string,\r\n\ttype: string,\r\n\tmin: number,\r\n\tmax: number,\r\n\tonItemSelection?: (index: number) => void\r\n) {\r\n\tconst chartOptions: ChartOptions = {\r\n\t\tresponsive: true,\r\n\t\tmaintainAspectRatio: true,\r\n\t\tonResize: () => { },\r\n\r\n\t\taspectRatio: 0.5,\r\n\r\n\t\tlayout: {\r\n\t\t\tpadding: 12\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tyAxes: [{\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tmax: min,\r\n\t\t\t\t\tmin: max\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tdisplay: type == \"pizza\" || type == \"doughnut\",\r\n\t\t\tlabels: {\r\n\t\t\t\tfontSize: 16\r\n\t\t\t},\r\n\t\t\tonClick: (_: any, item: any) => onItemSelection && onItemSelection((item as any).index),\r\n\t\t\tonHover: (event: any) => {\r\n\t\t\t\tconst target = event.target as HTMLElement | null\r\n\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\ttarget.style.cursor = \"pointer\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tposition: legendPosition as any\r\n\t\t},\r\n\t\tonClick: (_: any, chartElements: any) => {\r\n\t\t\tif (chartElements && chartElements.length == 1 && onItemSelection) {\r\n\t\t\t\tconst element = chartElements[0] as any\r\n\t\t\t\tconst index = element._index\r\n\r\n\t\t\t\tonItemSelection(index)\r\n\t\t\t}\r\n\t\t},\r\n\t\tonHover: (event: any, chartElements: any) => {\r\n\t\t\tconst target = event.target as HTMLElement | null\r\n\r\n\t\t\tif (target) {\r\n\t\t\t\ttarget.style.cursor = chartElements[0] ? \"pointer\" : \"default\"\r\n\t\t\t}\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tdisplay: true,\r\n\t\t\tfontSize: 20,\r\n\t\t\tposition: \"top\",\r\n\t\t\ttext: title\r\n\t\t},\r\n\t\ttooltips: {\r\n\t\t\tbodyFontSize: 14\r\n\t\t}\r\n\t}\r\n\r\n\treturn chartOptions\r\n}\r\n\r\nexport default Chart\r\n","import { AppBar, Box, Button, Grid, IconButton, Paper, Toolbar, Typography } from \"@material-ui/core\";\r\nimport { AlarmOn, ExitToApp, LocalCafe, Menu, QueryBuilder, Work } from \"@material-ui/icons\";\r\nimport last from \"array-last\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { ComponentContext } from \"../../shared/ComponentContext\";\r\nimport { ActivityRecord, DayWorkReport } from \"../../types/Types\";\r\nimport Clock from \"../../utils/Clock\";\r\nimport Image from '../../utils/Image';\r\nimport { loadAbsoluteMoment } from \"../../utils/Moment\";\r\nimport { useWorkRecords, WorkRecordsProvider } from \"../../utils/WorkRecordsProvider\";\r\nimport ActivityTable from \"./ActivityTable\";\r\n\r\nimport Chart from \"./Chart\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nfunction UserInfo() {\r\n    const { lastWorkRecord } = useWorkRecords()\r\n    const context = useContext(ComponentContext)\r\n    return <Box display=\"flex\" flexDirection=\"row\" overflow=\"hidden\">\r\n        <Box overflow=\"hidden\" p={1} >\r\n            <Image\r\n                src=\"imgs/user.svg\"\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n            />\r\n        </Box>\r\n        <Box p={1} flex={1} style={{ display: \"flex\", marginLeft: \"10px\" }}>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" style={{ fontWeight: \"bold\" }}>{context.user?.name}</Typography>\r\n                    <Typography style={{ fontStyle: \"italic\" }} variant=\"h6\">{context.user?.occupation}</Typography>\r\n                    <Typography variant=\"h6\"> {lastWorkRecord && <span>\r\n                        <b>Last Status:</b> {lastWorkRecord.activityType} at {lastWorkRecord.time}\r\n                    </span>\r\n                    }</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    </Box>\r\n}\r\n\r\nfunction UserHoursReport() {\r\n    const { todayWorkRecords, todayWorkReport } = useWorkRecords()\r\n\r\n    return <Grid container style={{ width: \"100%\", padding: \"10px\" }}>\r\n        <Grid item xs={12} lg={4}>\r\n            <Typography variant=\"h5\" style={{ fontWeight: \"bold\" }}>Started Working</Typography>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <Work style={{ marginRight: \"5px\" }} />\r\n                <Typography variant=\"h6\" >{todayWorkRecords[0] ? loadAbsoluteMoment(todayWorkRecords[0].time, \"HH:mm\").format(\"LT\") : \"--:--\"}</Typography>\r\n            </div>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4}>\r\n            <Typography variant=\"h5\" style={{ fontWeight: \"bold\" }}>Total Worked Today</Typography>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <QueryBuilder style={{ marginRight: \"5px\" }} />\r\n                <Typography variant=\"h6\" >{todayWorkReport?.totalHoursWorked || \"00:00\"}</Typography>\r\n            </div>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4}>\r\n            <Typography variant=\"h5\" style={{ fontWeight: \"bold\" }}>Missing Hours</Typography>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <QueryBuilder style={{ marginRight: \"5px\" }} />\r\n                <Typography variant=\"h6\" >{\"02:00\"}</Typography>\r\n            </div>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n\r\n\r\nfunction Actions() {\r\n    const { workRecords, addWorkRecord } = useWorkRecords()\r\n    const lastWorkRecord = last(workRecords || []) as ActivityRecord\r\n    const [, updateState] = useState<{}>();\r\n    const forceUpdate = React.useCallback(() => updateState({}), []);\r\n\r\n    function handleCheckin() {\r\n        addWorkRecord(\"Arriving\")\r\n        forceUpdate()\r\n    }\r\n\r\n    function handleCheckout() {\r\n        addWorkRecord(\"Exiting\")\r\n        forceUpdate()\r\n    }\r\n\r\n    function handleLunchStarted() {\r\n        addWorkRecord(\"Lunch Started\")\r\n        forceUpdate()\r\n    }\r\n\r\n    function handleLunchFinished() {\r\n        addWorkRecord(\"Finished Lunch\")\r\n        forceUpdate()\r\n    }\r\n\r\n    return <Box display=\"flex\" flexDirection=\"row\" flex={2} justifyContent=\"center\" alignItems=\"flex-end\" padding={2}>\r\n        <Button\r\n            variant=\"contained\"\r\n            disabled={lastWorkRecord && lastWorkRecord.activityType === \"Lunch Started\"}\r\n            style={{ backgroundColor: \"#00802b\", fontWeight: \"bold\", width: '170px', marginRight: 5 }}\r\n            title=\"Check-In\"\r\n            endIcon={<AlarmOn />}\r\n            onClick={lastWorkRecord && lastWorkRecord.activityType === \"Arriving\" ? handleCheckout : handleCheckin}\r\n        >\r\n            {lastWorkRecord && lastWorkRecord.activityType === \"Arriving\" ? \"Check-Out\" : \"Check-In\"}\r\n        </Button>\r\n        <Button\r\n            style={{ width: \"170px\", backgroundColor: \"#fb0e0e\", fontWeight: \"bold\", marginLeft: 5 }}\r\n            disabled={lastWorkRecord && lastWorkRecord.activityType === \"Exiting\"}\r\n            variant=\"contained\"\r\n            title=\"Lunch\"\r\n            endIcon={<LocalCafe />}\r\n            onClick={lastWorkRecord && lastWorkRecord.activityType === \"Lunch Started\" ? handleLunchFinished : handleLunchStarted}\r\n        >\r\n            {lastWorkRecord && lastWorkRecord.activityType === \"Lunch Started\" ? \"Stop Lunch\" : \"Start Lunch\"}\r\n        </Button>\r\n    </Box>\r\n}\r\n\r\nfunction HomeToolbar(props: { logout: () => void }) {\r\n\r\n    return <Toolbar style={{ backgroundColor: \"#04010e\" }}>\r\n        <IconButton edge=\"start\" style={{ marginRight: 16 }} color=\"inherit\" aria-label=\"menu\">\r\n            <Menu style={{ color: \"white\" }} />\r\n        </IconButton>\r\n\r\n        <Box component=\"div\" display=\"flex\" width=\"100%\" justifyContent=\"space-between\">\r\n            <Typography variant=\"h6\" style={{ color: \"white\", width: \"200px\" }}>Work Hours Manager</Typography>\r\n        </Box>\r\n        <IconButton edge=\"end\" onClick={() => {\r\n            props.logout()\r\n        }} style={{ marginRight: 16 }} color=\"inherit\" aria-label=\"menu\">\r\n            <Typography style={{ marginRight: \"5px\", color: \"white\" }}>Exit</Typography>\r\n            <ExitToApp style={{ color: \"white\" }} />\r\n        </IconButton>\r\n    </Toolbar>\r\n}\r\n\r\n\r\n\r\n\r\nfunction ChartWeeklyInvoke() {\r\n    const { weeklyWorkReport } = useWorkRecords()\r\n    if (!weeklyWorkReport) return <></>\r\n\r\n    const colors = [\r\n        \"#e7ff7b\",\r\n        \"#0088d9\",\r\n        \"#bff47f\",\r\n        \"#f74a4a\",\r\n        \"#bcfa9e\",\r\n        \"#496956\",\r\n        \"#ffc3ba\"\r\n    ]\r\n\r\n    return <Chart<DayWorkReport>\r\n        min={0}\r\n        max={9}\r\n        fetchColor={type => colors[weeklyWorkReport.indexOf(type)]}\r\n        fetchLegend={type => loadAbsoluteMoment(type.date).format(\"ddd\")}\r\n        fetchValue={type => (loadAbsoluteMoment(type.totalHoursWorked, \"HH:mm\").hours() + (loadAbsoluteMoment(type.totalHoursWorked, \"HH:mm\").minutes() / 60))}\r\n        items={weeklyWorkReport}\r\n        title=\"Weekly Worked Hours\"\r\n        legendPosition={\"bottom\"}\r\n        type={\"verticalBar\"}\r\n    />\r\n}\r\n\r\n\r\nexport type PropsHome = {\r\n    logout: () => void\r\n}\r\nconst Home = (props: PropsHome) => {\r\n\r\n\r\n    return <WorkRecordsProvider>\r\n        <Box component={\"div\"} bgcolor=\"#6c677ba3\" style={{ width: '100%', minHeight: '100%', display: 'flex', flexDirection: 'column', flex: 1, height: \"100%\" }}>\r\n            <AppBar position=\"static\">\r\n                <HomeToolbar logout={() => { props.logout() }} />\r\n            </AppBar>\r\n            <Grid container style={{ height: '100%' }}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Box display=\"flex\" flexDirection=\"column\" height={'100%'} justifyContent={'space-around'} >\r\n                        <Box component={Paper} margin={1} flex={1} display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\r\n                            <UserInfo />\r\n                        </Box>\r\n                        <Box component={Paper} margin={1} flex={1} display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\r\n                            <Box textAlign=\"center\">\r\n                                <Clock />\r\n                                <Actions />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box component={Paper} margin={1} display=\"flex\" flex={1} p={4}>\r\n                            <Grid container>\r\n                                <Grid xs={12} item>\r\n                                    <Box display=\"flex\" height=\"100%\" justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\r\n                                        <ChartWeeklyInvoke />\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <Box display=\"flex\" flexDirection=\"column\" height={'100%'} >\r\n                        <Box display=\"flex\" flex={1} component={Paper} margin={1}>\r\n                            <UserHoursReport />\r\n                        </Box>\r\n                        <Box display=\"flex\" flex={9} p={1} flexDirection=\"column\" justifyContent=\"center\" component={Paper} margin={1}>\r\n                            <ActivityTable />\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    </WorkRecordsProvider>\r\n\r\n}\r\n\r\nexport default Home"],"sourceRoot":""}